
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.text.Document;
import javax.swing.undo.CannotRedoException;
import javax.swing.undo.CannotUndoException;
import javax.swing.undo.UndoManager;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author alu26600537w
 */
public class MainFrame extends javax.swing.JFrame {

    private JFileChooser fileChooser;
    private int selection;
    private File file;
    private boolean wasSaved;
    private UndoManager undo;
    private Document doc;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        fileChooser = new JFileChooser();
        wasSaved = false;
        undo = new UndoManager();
        doc = textArea.getDocument();
        doc.addUndoableEditListener(new UndoableEditListener() {
            public void undoableEditHappened(UndoableEditEvent evt) {
                undo.addEdit(evt.getEdit());
            }
        });
    }

    public void openFile() {
        selection = fileChooser.showOpenDialog(textArea);
        if (selection == JFileChooser.APPROVE_OPTION) {
            file = fileChooser.getSelectedFile();
            try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
                String linea = reader.readLine();
                while (linea != null) {
                    // Aquí lo que tengamos que hacer con la línea puede ser esto
                    textArea.append(linea);
                    textArea.append(System.getProperty("line.separator"));
                    linea = reader.readLine();
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        wasSaved = false;
    }

    public void saveFileAs() throws IOException {
        selection = fileChooser.showSaveDialog(textArea);
        try (FileWriter fw = new FileWriter(fileChooser.getSelectedFile())) {
            fw.write(textArea.getText());
        }
        wasSaved = true;
    }

    public void saveFile() {
        if (!wasSaved) {
            try {
                saveFileAs();
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try (FileWriter fw = new FileWriter(fileChooser.getSelectedFile())) {
                fw.write(textArea.getText());
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jToolBar1 = new javax.swing.JToolBar();
        openBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newMenuBtn = new javax.swing.JMenuItem();
        openMenuBtn = new javax.swing.JMenuItem();
        saveMenuBtn = new javax.swing.JMenuItem();
        saveAsMenuBtn = new javax.swing.JMenuItem();
        exitMenuBtn = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        undoBtn = new javax.swing.JMenuItem();
        redoBtn = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        openBtn.setText("Open");
        openBtn.setFocusable(false);
        openBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        openBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        openBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(openBtn);

        saveBtn.setText("Save");
        saveBtn.setFocusable(false);
        saveBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(saveBtn);

        textArea.setColumns(20);
        textArea.setLineWrap(true);
        textArea.setRows(5);
        textArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(textArea);

        jLabel1.setText("jLabel1");

        jMenu1.setText("File");

        newMenuBtn.setText("New");
        newMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuBtnActionPerformed(evt);
            }
        });
        jMenu1.add(newMenuBtn);

        openMenuBtn.setText("Open file");
        openMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuBtnActionPerformed(evt);
            }
        });
        jMenu1.add(openMenuBtn);

        saveMenuBtn.setText("Save");
        saveMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuBtnActionPerformed(evt);
            }
        });
        jMenu1.add(saveMenuBtn);

        saveAsMenuBtn.setText("Save as...");
        saveAsMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuBtnActionPerformed(evt);
            }
        });
        jMenu1.add(saveAsMenuBtn);

        exitMenuBtn.setText("Exit");
        exitMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuBtnActionPerformed(evt);
            }
        });
        jMenu1.add(exitMenuBtn);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem1.setText("Search...");
        jMenu2.add(jMenuItem1);
        jMenu2.add(jSeparator2);

        undoBtn.setText("Undo...");
        undoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoBtnActionPerformed(evt);
            }
        });
        jMenu2.add(undoBtn);

        redoBtn.setText("Redo...");
        redoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoBtnActionPerformed(evt);
            }
        });
        jMenu2.add(redoBtn);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("About");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuBtnActionPerformed
        if (textArea.getText().length() > 0) {
            int confirmation = JOptionPane.showConfirmDialog(null,
                    "Save current file before?", "Confirmation",
                    JOptionPane.YES_NO_CANCEL_OPTION);

            if (confirmation == JOptionPane.YES_OPTION) {
                saveFile();
                textArea.setText("");
            }
            if (confirmation == JOptionPane.NO_OPTION) {
                textArea.setText("");
            }
        }
    }//GEN-LAST:event_newMenuBtnActionPerformed

    private void openMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuBtnActionPerformed
        openFile();
    }//GEN-LAST:event_openMenuBtnActionPerformed

    private void saveMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuBtnActionPerformed
        saveFile();
    }//GEN-LAST:event_saveMenuBtnActionPerformed

    private void saveAsMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuBtnActionPerformed
        try {
            saveFileAs();
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveAsMenuBtnActionPerformed

    private void exitMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuBtnActionPerformed
        int confirmation = JOptionPane.showConfirmDialog(null,
                "Save before exit?", "Exit Program Message Box",
                JOptionPane.YES_NO_CANCEL_OPTION);

        if (confirmation == JOptionPane.YES_OPTION) {
            saveFile();
            dispose();
        }
        if (confirmation == JOptionPane.NO_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_exitMenuBtnActionPerformed

    private void openBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openBtnActionPerformed
        openFile();
    }//GEN-LAST:event_openBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        saveFile();
    }//GEN-LAST:event_saveBtnActionPerformed

    private void undoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoBtnActionPerformed
        try {
            if (undo.canUndo()) {
                undo.undo();
            }
        } catch (CannotUndoException e) {
        }
    }//GEN-LAST:event_undoBtnActionPerformed

    private void redoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoBtnActionPerformed
        try {
            if (undo.canRedo()) {
                undo.redo();
            }
        } catch (CannotRedoException e) {
        }
    }//GEN-LAST:event_redoBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem exitMenuBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuItem newMenuBtn;
    private javax.swing.JButton openBtn;
    private javax.swing.JMenuItem openMenuBtn;
    private javax.swing.JMenuItem redoBtn;
    private javax.swing.JMenuItem saveAsMenuBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JMenuItem saveMenuBtn;
    private javax.swing.JTextArea textArea;
    private javax.swing.JMenuItem undoBtn;
    // End of variables declaration//GEN-END:variables
}
